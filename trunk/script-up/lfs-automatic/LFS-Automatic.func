#!/bin/bash

# LFS-Automatic - An Automated Linux From Scratch-Installer
# Copyright (C) 2009  Team Developer Dertin GNU/Linux
#
# This project is based on "http://savannah.nongnu.org/projects/LFS-Automatic/"
#
# LFS-Automatic comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
# This is free software, and you are welcome to redistribute it
# under certain conditions; see COPYING for details.


function Check_running ()
{
	if [ -e /var/lock/lfs-install.lock ]
	then
		echo "ERUNNING: '"$(basename $0)"' is already running."

		exit 1
	fi

	trap "test -e /var/lock/lfs-install.lock && \
		rm -f /var/lock/lfs-install.lock; exit 0" 0 2 15
	
	touch /var/lock/lfs-install.lock
}

function Check_existing ()
{
	if [ -e "$LFS" ]
	then
		echo "EEXISTING: '"$LFS"' is already existing."
		echo
		echo "Hint: use 'scripts/reset.sh' to remove an (unfinished) installation."

		exit 1
	fi
}

function Check_user ()
{
	if [ "$(id -u)" != "0" ]
	then
		echo "EUSER: '"$(whoami)"' is not root."

		exit 1
	fi
}

function Check_compile () {

export LC_ALL=C

# Simple script to list version numbers of critical development tools
# Add: Guillermo Céspedes Tabárez

	bash --version | head -n1 | cut -d" " -f2-4
	echo "/bin/sh -> `readlink -f /bin/sh`"
	echo -n "Binutils: "; ld --version | head -n1 | cut -d" " -f3-
	bison --version | head -n1
	if [ -e /usr/bin/yacc ]; then echo "/usr/bin/yacc -> `readlink -f /usr/bin/yacc`"; 
  	else echo "yacc not found"; fi
	bzip2 --version 2>&1 < /dev/null | head -n1 | cut -d" " -f1,6-
	echo -n "Coreutils: "; chown --version | head -n1 | cut -d")" -f2
	diff --version | head -n1
	find --version | head -n1
	gawk --version | head -n1
	if [ -e /usr/bin/awk ]; then echo "/usr/bin/awk -> `readlink -f /usr/bin/awk`"; 
  	else echo "awk not found"; fi
	gcc --version | head -n1
	/lib/libc.so.6 | head -n1 | cut -d" " -f1-7
	grep --version | head -n1
	gzip --version | head -n1
	cat /proc/version
	m4 --version | head -n1
	make --version | head -n1
	patch --version | head -n1
	echo Perl `perl -V:version`
	sed --version | head -n1
	tar --version | head -n1
	makeinfo --version | head -n1
	
	echo 'main(){}' > dummy.c && gcc -o dummy dummy.c

		if [ -x dummy ]; then 
		echo "Compilation OK"; 
		else
		echo "Compilation failed"
		rm -f dummy.c dummy
		exit 1;
		fi

rm -f dummy.c dummy

}
